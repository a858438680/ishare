def execQ1(spark: SparkSession): Unit = {

  val sum_qty = new DoubleSum
  val sum_base_price = new DoubleSum
  val sum_disc_price = new Sum_disc_price
  val sum_charge = new Sum_disc_price_with_tax
  val avg_qty = new DoubleAvg
  val avg_price = new DoubleAvg
  val avg_disc = new DoubleAvg
  val count_order = new Count

  val l = DataUtils.loadStreamTable(spark, "lineitem", "l", tpchSchema)
        .filter($"l_shipdate" <= "1998-09-01")

  return l
    .groupBy($"l_returnflag", $"l_linestatus")
    .agg(
      sum_qty($"l_quantity").as("sum_qty"),
      sum_base_price($"l_extendedprice" * $"l_discount").as("sum_base_price"),
      sum_disc_price($"l_extendedprice", $"l_discount").as("sum_disc_price"),
      sum_charge($"l_extendedprice", $"l_discount", $"l_tax").as("sum_charge"),
      avg_qty($"l_quantity").as("avg_qty"),
      avg_price($"l_extendedprice").as("avg_price"),
      avg_disc($"l_discount").as("avg_disc"),
      count_order(lit(1L)).as("count_order"))

}
