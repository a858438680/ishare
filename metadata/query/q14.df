def execQ14(spark: SparkSession): Unit = {

  val sum_disc_price = new Sum_disc_price
  val udaf_q14 = new UDAF_Q14

  val l = DataUtils.loadStreamTable(spark, "lineitem", "l", tpchSchema)
    .filter($"l_shipdate" between ("1994-09-01", "1994-10-01"))
  val p = DataUtils.loadStreamTable(spark, "part", "p", tpchSchema)

  return l
    .join(p, $"l_partkey" === $"p_partkey")
    .agg(
      ((udaf_q14($"p_type", $"l_extendedprice", $"l_discount")/sum_disc_price($"l_extendedprice", $"l_discount")) * 100).as("promo_revenue"))

}
